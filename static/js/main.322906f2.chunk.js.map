{"version":3,"sources":["utils/history.js","layout/MenuDrawer.js","layout/SearchDrawer.js","layout/CartDrawer.js","layout/FilterDrawer.js","layout/TopHeader.js","components/GridItem.js","components/GridView.js","components/DetailView.js","components/ListView.js","components/CompareView.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","compare","a","b","categoryA","toUpperCase","categoryB","comparison","MenuDrawer","state","visible","showDrawer","setState","onClose","handleClick","e","props","history","push","location","pathname","key","Fragment","style","display","cursor","onClick","this","type","title","placement","closable","bodyStyle","padding","width","defaultSelectedKeys","defaultOpenKeys","mode","Item","countItems","categories","sort","map","category","count","Component","SearchDrawer","FilterDrawer","handleDisplayChange","target","value","search","handleSortChange","console","log","radioStyle","height","lineHeight","marginRight","Group","onChange","Button","TopHeader","require","clear","float","src","marginLeft","marginTop","alt","SimpleGridItem","item","textAlign","backgroundColor","images","loader","marginBottom","className","price","GridView","background","gutter","margin","items","id","xs","lg","to","GridItem","columns","dataIndex","c","DetailView","justify","align","afterChange","image","index","fontSize","description","dataSource","features","size","pagination","showHeader","ListView","maxWidth","color","ean","reference","min","defaultValue","CompareView","Header","Content","App","dbLoaded","attributes","itemDB","fts","name","filter","attribute","parseInt","Object","entries","classification","fetch","then","response","json","data","length","URLSearchParams","get","categoryId","slice","itemDBtoItemApp","itemId","match","matchPath","path","params","minHeight","position","zIndex","borderBottom","paddingTop","exact","render","component","getFilteredItems","getItem","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.322906f2.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","import React, { Component } from 'react';\r\nimport { Drawer, Icon, Menu } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction compare(a, b) {\r\n    // Use toUpperCase() to ignore character casing\r\n    const categoryA = a[1].toUpperCase();\r\n    const categoryB = b[1].toUpperCase();\r\n\r\n    let comparison = 0;\r\n    if (categoryA > categoryB) {\r\n        comparison = 1;\r\n    } else if (categoryA < categoryB) {\r\n        comparison = -1;\r\n    }\r\n    return comparison;\r\n}\r\n\r\nclass MenuDrawer extends Component {\r\n    state = { visible: false };\r\n\r\n    // Drawer\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    // Menu\r\n    handleClick = e => {\r\n        this.props.history.push(this.props.history.location.pathname + '?category=' + e.key);\r\n        this.onClose();\r\n    };\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h2 style={{ display: 'inline', cursor: 'pointer' }} onClick={this.showDrawer}><Icon type=\"menu\" /></h2>\r\n                <Drawer\r\n                    title=\"Catégories\"\r\n                    placement=\"left\"\r\n                    closable={false}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.visible}\r\n                    bodyStyle={{ padding: '16px 0' }}\r\n                >\r\n                    <Menu\r\n                        onClick={this.handleClick}\r\n                        style={{ width: 256 }}\r\n                        defaultSelectedKeys={['all_categories']}\r\n                        defaultOpenKeys={[]}\r\n                        mode=\"inline\"\r\n                    >\r\n                        <Menu.Item key={0}>Tous les produits ({this.props.countItems})</Menu.Item>\r\n                        {this.props.categories.sort(compare).map(category => (\r\n                            <Menu.Item key={category[0]}>{category[1]} ({category.count})</Menu.Item>\r\n                        ))}\r\n                    </Menu>\r\n\r\n                </Drawer>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuDrawer;","import React, { Component } from 'react';\r\nimport { Drawer, Icon } from 'antd';\r\n\r\nclass SearchDrawer extends Component {\r\n    state = { visible: false };\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h2 style={{ display: 'inline', cursor: 'pointer' }} onClick={this.showDrawer}><Icon type=\"search\" /></h2>\r\n                <Drawer\r\n                    title=\"Search\"\r\n                    placement=\"top\"\r\n                    closable={false}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.visible}\r\n                >\r\n                    <p>Search...</p>\r\n                </Drawer>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchDrawer;","import React, { Component } from 'react';\r\nimport { Drawer, Icon } from 'antd';\r\n\r\nclass CartDrawer extends Component {\r\n    state = { visible: false };\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h2 style={{ display: 'inline', cursor: 'pointer' }} onClick={this.showDrawer}><Icon type=\"shopping-cart\" /></h2>\r\n                <Drawer\r\n                    title=\"Cart\"\r\n                    placement=\"top\"\r\n                    closable={false}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.visible}\r\n                >\r\n                    <p>Cart...</p>\r\n                </Drawer>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CartDrawer;","import React, { Component } from 'react';\r\nimport { Drawer, Icon, Radio } from 'antd';\r\n\r\nclass FilterDrawer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let display = \"grid\";\r\n        if (props.history.location.pathname === '/listView') {\r\n            display = \"list\"\r\n        } else if (props.history.location.pathname === '/compareView') {\r\n            display = \"compare\"\r\n        }\r\n        this.state = { visible: false, display: display, sort: \"new\" };\r\n    }\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    handleDisplayChange = e => {\r\n        this.setState({\r\n            display: e.target.value\r\n        });\r\n        if (e.target.value === 'grid') {\r\n            this.props.history.push('/gridView' + this.props.history.location.search);\r\n        } else if (e.target.value === 'list') {\r\n            this.props.history.push('/listView' + this.props.history.location.search);\r\n        } else if (e.target.value === 'compare') {\r\n            this.props.history.push('/compareView' + this.props.history.location.search);\r\n        }\r\n\r\n    }\r\n\r\n    handleSortChange = e => {\r\n        console.log('radio checked', e.target.value);\r\n        this.setState({\r\n            value: e.target.value,\r\n        });\r\n    };\r\n    render() {\r\n        const radioStyle = {\r\n            display: 'block',\r\n            height: '30px',\r\n            lineHeight: '30px',\r\n        };\r\n        return (\r\n            <React.Fragment>\r\n                <h2 style={{ display: 'inline', marginRight: '20px', cursor: 'pointer' }} onClick={this.showDrawer}><Icon type=\"control\" /></h2>\r\n                <Drawer\r\n                    title=\"Réglages\"\r\n                    placement=\"right\"\r\n                    closable={false}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.visible}\r\n                    width={275}\r\n                >\r\n                    <h3>Affichage</h3>\r\n                    <Radio.Group onChange={this.handleDisplayChange} value={this.state.display} >\r\n                        <Radio.Button value=\"grid\">Grille</Radio.Button>\r\n                        <Radio.Button value=\"list\">Liste</Radio.Button>\r\n                        <Radio.Button value=\"compare\">Comparer</Radio.Button>\r\n                    </Radio.Group>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    {/* <h3>Filtres</h3>\r\n                    <br></br>\r\n                    <br></br> */}\r\n\r\n                    <h3>Trier par</h3>\r\n                    <Radio.Group onChange={this.handleSortChange} value={this.state.sort}>\r\n                        <Radio style={radioStyle} value={'new'}>\r\n                            Nouveautés\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={'price_asc'}>\r\n                            Prix : ordre croissant\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={'price_dsc'}>\r\n                            Prix order décroissant\r\n                        </Radio>\r\n                    </Radio.Group>\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                </Drawer>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterDrawer;","import React, { Component } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport MenuDrawer from './MenuDrawer';\r\nimport SearchDrawer from './SearchDrawer';\r\nimport CartDrawer from './CartDrawer';\r\nimport FilterDrawer from './FilterDrawer';\r\n\r\nclass TopHeader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        require('./less/TopHeader.less');\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ width: '100%', clear: 'both' }}>\r\n                <div style={{ float: 'left' }}>\r\n                    <MenuDrawer categories={this.props.categories} countItems={this.props.countItems} history={this.props.history} />\r\n                    <img src=\"logo.jpg\" style={{ marginLeft: '20px', marginTop: '-6px' }} alt=\"\" />\r\n                </div>\r\n                <div style={{ float: 'right' }}>\r\n                    <FilterDrawer history={this.props.history} />\r\n                    <SearchDrawer />\r\n                    {/* <CartDrawer /> */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopHeader;","import React, { Component } from 'react';\r\nimport { Spin } from 'antd';\r\nimport Img from 'react-image';\r\n\r\n\r\nclass SimpleGridItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        require('./less/SimpleGridItem.less');\r\n    }\r\n    render() {\r\n        const { item } = this.props;\r\n        return (\r\n            <div style={{ textAlign: 'center', backgroundColor: 'white', padding: '8px' }}>\r\n                <Img\r\n                    src={[item.images[0] + '?preset=large']}\r\n                    style={{ width: '100%', height: 'auto' }}\r\n                    loader={<div style={{ textAlign: 'center', marginTop: '50px', marginBottom: '50px' }}><Spin /><br></br>Chargement...</div>}\r\n                />\r\n                <h3>{item.title}</h3>\r\n                <h3 className=\"price\">{item.price} €</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SimpleGridItem;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col } from 'antd';\r\nimport GridItem from './GridItem';\r\n\r\nclass GridView extends Component {\r\n    render() {\r\n        // console.log(\"render grid\", this.state)\r\n        return (\r\n            <div style={{ background: '#dadada' }}>\r\n                <Row gutter={[1, 1]} type=\"flex\" style={{ margin: '0px' }}  >\r\n                    {this.props.items.map(item => (\r\n                        <Col key={item.id} xs={12} lg={6} style={{ height: '100%' }}>\r\n                            <div style={{ height: '100%', background: 'white' }}>\r\n                                <Link to={'/detailView/' + item.id}>\r\n                                    <GridItem item={item} />\r\n                                </Link>\r\n                            </div>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GridView;","import React, { Component } from 'react';\r\n\r\nimport { Table, Row, Col, Carousel, Divider } from 'antd';\r\n\r\nconst columns = [\r\n    {\r\n        title: '',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: '',\r\n        dataIndex: 'value',\r\n        key: 'value',\r\n    },\r\n];\r\n\r\nfunction onChange(a, b, c) {\r\n    console.log(a, b, c);\r\n}\r\n\r\n\r\n\r\nclass DetailView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        require('./less/DetailView.less');\r\n    }\r\n    render() {\r\n        const { item } = this.props;\r\n        return (\r\n            <div style={{ background: 'white', padding: '16px' }}>\r\n                <Row gutter={0} type=\"flex\" justify=\"start\" align=\"top\" style={{ margin: '0px' }}>\r\n                    <Col xs={24} lg={12}>\r\n                        <Carousel afterChange={onChange}>\r\n                            {item.images.map((image, index) =>\r\n                                <div key={index}>\r\n                                    <img src={image + '?preset=large'} style={{ width: '100%', height: 'auto' }} alt=\"\" />\r\n                                </div>\r\n                            )}\r\n                        </Carousel>\r\n                    </Col>\r\n                    <Col xs={24} lg={12}>\r\n                        <br></br>\r\n                        <h1 style={{ fontSize: '35px', lineHeight: '35px' }}>{item.title}</h1>\r\n                        <p style={{ fontSize: '16px', lineHeight: '22px' }}>{item.description}</p>\r\n                        <h1 className=\"price\">{item.price} €</h1>\r\n                        <Divider />\r\n                        <h3>Caractéristiques techniques</h3>\r\n                        <Table dataSource={item.features} columns={columns} size=\"middle\" pagination={false} showHeader={false} />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default DetailView;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Tag, Button, Icon, Divider, InputNumber, Spin } from 'antd';\r\nimport Img from 'react-image';\r\n\r\nclass ListView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        require('./less/ListView.less');\r\n    }\r\n    render() {\r\n        // console.log(\"render grid\", this.state)\r\n        return (\r\n            <div style={{ maxWidth: 1200, marginLeft: 'auto', marginRight: 'auto', background: '#dadada' }}>\r\n                {this.props.items.map(item => (\r\n                    <div key={item.id} style={{ marginBottom: '1px', background: 'white', padding: '10px 0' }}>\r\n                        <Row gutter={24} style={{ margin: '0px' }}>\r\n                            <Col xs={9} lg={7}>\r\n                                <Img\r\n                                    src={[item.images[0] + '?preset=large']}\r\n                                    style={{ width: '100%', height: 'auto' }}\r\n                                    loader={<div style={{ textAlign: 'center', marginTop: '50px' }}><Spin /><br></br>Chargement...</div>}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={15} lg={17}>\r\n                                <h2>{item.title}</h2>\r\n                                <h3 className=\"price\">{item.price} €</h3>\r\n                                <h4 style={{ color: \"#757575\" }}>EAN : {item.ean}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Réf : {item.reference}</h4>\r\n                                <p>{item.description}</p>\r\n                                <div style={{ marginBottom: '18px' }}>\r\n                                    <Tag color=\"#108ee9\">A+++ -20%</Tag>\r\n                                    <Tag color=\"#108ee9\">Led</Tag>\r\n                                    <Tag color=\"#108ee9\">NoFrost</Tag>\r\n                                </div>\r\n                                <Row gutter={[16, 16]}>\r\n                                    <Col xs={24} lg={12}>\r\n                                        <Button>Ajouter à la liste <Icon type=\"down\" /></Button>\r\n                                    </Col>\r\n                                    <Col xs={24} lg={12}>\r\n                                        <InputNumber min={1} defaultValue={1} style={{ width: '66px' }} />\r\n                                        <Button style={{ marginLeft: '5px' }}><Icon type=\"cart\" /> Ajouter au panier</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListView;","import React, { Component } from 'react';\r\n\r\nclass CompareView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        require('./less/CompareView.less');\r\n    }\r\n    render() {\r\n        const { items } = this.props;\r\n        return (\r\n            <div className=\"compare-view\">\r\n                <div className=\"container\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th className=\"headcol\"></th>\r\n                                {items.map((item, index) => (\r\n                                    <td key={index}>\r\n                                        <div style={{ width: '200px', textAlign: 'center' }}>\r\n                                            <img src={item.images[0] + '?preset=large'} style={{ width: '100%', height: 'auto' }} alt=\"\" />\r\n                                        </div>\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"headcol\">Titre</th>\r\n                                {items.map((item, index) => (\r\n                                    <td key={index}><h3>{item.title}</h3></td>\r\n                                ))}\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"headcol\">Prix</th>\r\n                                {items.map((item, index) => (\r\n                                    <td key={index}><h3 className=\"price\">{item.price} €</h3></td>\r\n                                ))}\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"headcol\">Réf</th>\r\n                                {items.map((item, index) => (\r\n                                    <td key={index}><p>{item.reference}</p></td>\r\n                                ))}\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"headcol\">EAN</th>\r\n                                {items.map((item, index) => (\r\n                                    <td key={index}><p>{item.ean}</p></td>\r\n                                ))}\r\n                            </tr>\r\n                            <tr>\r\n                                <th className=\"headcol\">Description</th>\r\n                                {items.map((item, index) => (\r\n                                    <td key={index}><p>{item.description}</p></td>\r\n                                ))}\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CompareView;","import React, { Component } from 'react';\r\nimport history from './utils/history';\r\nimport {\r\n  Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  matchPath\r\n} from \"react-router-dom\";\r\nimport './App.css'; import { Layout, Spin } from 'antd';\r\nimport TopHeader from './layout/TopHeader';\r\nimport GridView from './components/GridView';\r\nimport DetailView from './components/DetailView';\r\nimport ListView from './components/ListView';\r\nimport CompareView from './components/CompareView';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dbLoaded: false,\r\n    };\r\n    this.items = [];\r\n    this.categories = [];\r\n    this.attributes = [];\r\n    this.countItems = 0;\r\n  }\r\n\r\n  itemDBtoItemApp(itemDB) {\r\n    let fts = [];\r\n    if (itemDB[7]) {\r\n      for (let [key, value] of Object.entries(itemDB[7])) {\r\n        fts.push({ key: key, name: this.attributes.filter(attribute => attribute[0] === parseInt(key))[0][1], value: value })\r\n      }\r\n    }\r\n    return {\r\n      id: itemDB[0],\r\n      ean: itemDB[0],\r\n      reference: itemDB[1],\r\n      classification: itemDB[2],\r\n      title: itemDB[3],\r\n      description: itemDB[4],\r\n      price: itemDB[5],\r\n      images: itemDB[6],\r\n      features: fts\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.dbLoaded) {\r\n      fetch('/data.json')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          this.items = data.items;\r\n          this.categories = data.categories.map(category => ({\r\n            ...category,\r\n            count: this.items.filter(item => item[2] === category[0]).length\r\n          }));\r\n          this.countItems = data.items.length;\r\n          this.attributes = data.attributes;\r\n          this.setState({ dbLoaded: true });\r\n        });\r\n    }\r\n  }\r\n\r\n  getFilteredItems() {\r\n    let params = new URLSearchParams(history.location.search);\r\n    let category = params.get('category');\r\n    if (category && category !== \"\" && category !== \"0\") {\r\n      let categoryId = parseInt(category); // The category is stored as an int\r\n      return this.items.filter(item => item[2] === categoryId).slice(0, 24).map(itemDB => this.itemDBtoItemApp(itemDB));\r\n    } else {\r\n      // By default\r\n      return this.items.slice(0, 25).map(itemDB => this.itemDBtoItemApp(itemDB));\r\n    }\r\n  }\r\n  getItem() {\r\n    let match = matchPath(history.location.pathname, {\r\n      path: \"/detailView/:id\"\r\n    });\r\n    let itemId;\r\n    if (match && match.params.id) {\r\n      itemId = match.params.id;\r\n      return this.itemDBtoItemApp(this.items.filter(item => item[0] === itemId)[0]);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { dbLoaded } = this.state;\r\n    if (!dbLoaded) {\r\n      return <div style={{ textAlign: 'center', paddingTop: '40vh' }}><Spin size=\"large\" /><br></br><br></br>Loading...</div>\r\n    }\r\n    return (\r\n      <Router history={history}>\r\n        <div className=\"App\">\r\n          <Layout style={{ minHeight: '100vh' }}>\r\n            <Header style={{ position: 'fixed', zIndex: 1, width: '100%', height: '55px', lineHeight: '55px', backgroundColor: 'white', padding: '0 24px', borderBottom: '1px solid #dadada' }}>\r\n              <TopHeader title={'Eberhardt'} categories={this.categories} countItems={this.countItems} history={history} />\r\n            </Header>\r\n            <Content style={{ paddingTop: '54px' }}>\r\n              <Switch>\r\n                <Route exact path='/' render={(props) => <Redirect to='/gridView' />} />\r\n                <Route path=\"/gridView\" component={() => <GridView items={this.getFilteredItems()} />} />\r\n                <Route path=\"/listView\" component={() => <ListView items={this.getFilteredItems()} />} />\r\n                <Route path=\"/compareView\" component={() => <CompareView items={this.getFilteredItems()} />} />\r\n                <Route path=\"/detailView/:id\" component={() => <DetailView item={this.getItem()} />} />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}