{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { fade, withStyles, createMuiTheme } from '@material-ui/core/styles';\nimport Link from 'next/link';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { blue, red } from '@material-ui/core/colors';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport InputBase from '@material-ui/core/InputBase';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport MailIcon from '@material-ui/icons/Mail';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport LeftMenu from './Navigation/LeftMenu';\nconst muiTheme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: red,\n    error: red\n  }\n});\nconst drawerWidth = 260;\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  // toolbar: theme.mixins.toolbar,\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200\n    }\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  }\n});\n\nfunction Layout(props) {\n  const {\n    classes\n  } = props;\n  const [state, setState, anchorEl, setAnchorEl] = React.useState({\n    left: false\n  });\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      [side]: open\n    }));\n  };\n\n  const menuId = 'primary-search-account-menu';\n\n  const renderMenu = __jsx(Menu, {\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    id: menuId,\n    keepMounted: true,\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: isMenuOpen,\n    onClose: handleMenuClose\n  }, __jsx(MenuItem, {\n    onClick: handleMenuClose\n  }, \"Profile\"), __jsx(MenuItem, {\n    onClick: handleMenuClose\n  }, \"My account\"));\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n\n  const renderMobileMenu = __jsx(Menu, {\n    anchorEl: mobileMoreAnchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    id: mobileMenuId,\n    keepMounted: true,\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: isMobileMenuOpen,\n    onClose: handleMobileMenuClose\n  }, __jsx(MenuItem, null, __jsx(IconButton, {\n    \"aria-label\": \"show 4 new mails\",\n    color: \"inherit\"\n  }, __jsx(Badge, {\n    badgeContent: 4,\n    color: \"secondary\"\n  }, __jsx(MailIcon, null))), __jsx(\"p\", null, \"Messages\")), __jsx(MenuItem, null, __jsx(IconButton, {\n    \"aria-label\": \"show 11 new notifications\",\n    color: \"inherit\"\n  }, __jsx(Badge, {\n    badgeContent: 11,\n    color: \"secondary\"\n  }, __jsx(NotificationsIcon, null))), __jsx(\"p\", null, \"Notifications\")), __jsx(MenuItem, {\n    onClick: handleProfileMenuOpen\n  }, __jsx(IconButton, {\n    \"aria-label\": \"account of current user\",\n    \"aria-controls\": \"primary-search-account-menu\",\n    \"aria-haspopup\": \"true\",\n    color: \"inherit\"\n  }, __jsx(AccountCircle, null)), __jsx(\"p\", null, \"Profile\")));\n\n  return __jsx(ThemeProvider, {\n    theme: muiTheme\n  }, __jsx(React.Fragment, null, __jsx(CssBaseline, null), __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    className: classes.grow\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"primary\"\n  }, __jsx(Toolbar, null, __jsx(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: toggleDrawer('left', true)\n  }, __jsx(MenuIcon, null)), __jsx(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    noWrap: true\n  }, \"Product-Live Data Factory\"), __jsx(\"div\", {\n    className: classes.search\n  }, __jsx(\"div\", {\n    className: classes.searchIcon\n  }, __jsx(SearchIcon, null)), __jsx(InputBase, {\n    placeholder: \"Search\\u2026\",\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    inputProps: {\n      'aria-label': 'search'\n    }\n  })), __jsx(\"div\", {\n    className: classes.grow\n  }), __jsx(\"div\", {\n    className: classes.sectionDesktop\n  }, __jsx(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"account of current user\",\n    \"aria-controls\": menuId,\n    \"aria-haspopup\": \"true\",\n    onClick: handleProfileMenuOpen,\n    color: \"inherit\"\n  }, __jsx(AccountCircle, null))), __jsx(\"div\", {\n    className: classes.sectionMobile\n  }, __jsx(IconButton, {\n    \"aria-label\": \"show more\",\n    \"aria-controls\": mobileMenuId,\n    \"aria-haspopup\": \"true\",\n    onClick: handleMobileMenuOpen,\n    color: \"inherit\"\n  }, __jsx(MoreIcon, null))))), renderMobileMenu, renderMenu), __jsx(Drawer, {\n    className: classes.drawer,\n    open: state.left,\n    onClose: toggleDrawer('left', false),\n    classes: {\n      paper: classes.drawerPaper\n    }\n  }, __jsx(\"div\", {\n    className: classes.toolbar\n  }), __jsx(LeftMenu, null)), __jsx(\"main\", {\n    className: classes.content\n  }, props.children))));\n}\n\nexport default withStyles(styles)(Layout);","map":null,"metadata":{},"sourceType":"module"}