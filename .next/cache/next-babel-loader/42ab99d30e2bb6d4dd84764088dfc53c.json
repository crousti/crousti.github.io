{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bertr\\\\Dev\\\\DocumentationV3\\\\pages\\\\data-factory\\\\tasks.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  card: {\n    maxWidth: 300\n  },\n  media: {\n    height: 140\n  }\n});\n\nconst tasks = [{\n  \"groupDisplayName\": \"FTP\",\n  \"tasks\": [{\n    \"key\": \"ftp-list\",\n    \"displayName\": \"FTP List\",\n    \"description\": \"List files on a sFTP or on a FTP serveur.\",\n    \"image\": \"/public/data-factory/tasks/spreadsheet.png\"\n  }, {\n    \"key\": \"ftp-get\",\n    \"displayName\": \"FTP Get\",\n    \"description\": \"Get one file on a sFTP or on a FTP serveur.\",\n    \"image\": \"/public/data-factory/tasks/spreadsheet.png\"\n  }, {\n    \"key\": \"ftp-post\",\n    \"displayName\": \"FTP Post\",\n    \"description\": \"Post one or many files on a sFTP or on a FTP serveur.\",\n    \"image\": \"/public/data-factory/tasks/spreadsheet.png\"\n  }]\n}];\n\nfunction Tasks(props) {\n  const {\n    classes\n  } = props;\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, tasks.map((groupTask, index) => __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, groupTask.displayName), __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))))));\n}\n\nTasks.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Tasks);","map":{"version":3,"sources":["C:/Users/bertr/Dev/DocumentationV3/pages/data-factory/tasks.js"],"names":["React","withStyles","PropTypes","CssBaseline","Container","Grid","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","CloudDownloadIcon","styles","theme","root","flexGrow","card","maxWidth","media","height","tasks","Tasks","props","classes","map","groupTask","index","displayName","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GADe;AAIrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GAJe;AAOrBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE;AADL;AAPc,CAAL,CAApB;;AAYA,MAAMC,KAAK,GAAG,CACV;AACI,sBAAoB,KADxB;AAEI,WAAS,CACL;AACI,WAAO,UADX;AAEI,mBAAe,UAFnB;AAGI,mBAAe,2CAHnB;AAII,aAAS;AAJb,GADK,EAOL;AACI,WAAO,SADX;AAEI,mBAAe,SAFnB;AAGI,mBAAe,6CAHnB;AAII,aAAS;AAJb,GAPK,EAaL;AACI,WAAO,UADX;AAEI,mBAAe,UAFnB;AAGI,mBAAe,uDAHnB;AAII,aAAS;AAJb,GAbK;AAFb,CADU,CAAd;;AA4BA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AACA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACT,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,KAAK,CAACI,GAAN,CAAU,CAACC,SAAD,EAAYC,KAAZ,KACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,SAAS,CAACE,WAAf,CADJ,EAEI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADH,CADL,CADJ,CAFJ,CADJ;AAyCH;;AAEDN,KAAK,CAACO,SAAN,GAAkB;AACdL,EAAAA,OAAO,EAAEvB,SAAS,CAAC6B,MAAV,CAAiBC;AADZ,CAAlB;AAIA,eAAe/B,UAAU,CAACa,MAAD,CAAV,CAAmBS,KAAnB,CAAf","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    card: {\r\n        maxWidth: 300,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nconst tasks = [\r\n    {\r\n        \"groupDisplayName\": \"FTP\",\r\n        \"tasks\": [\r\n            {\r\n                \"key\": \"ftp-list\",\r\n                \"displayName\": \"FTP List\",\r\n                \"description\": \"List files on a sFTP or on a FTP serveur.\",\r\n                \"image\": \"/public/data-factory/tasks/spreadsheet.png\"\r\n            },\r\n            {\r\n                \"key\": \"ftp-get\",\r\n                \"displayName\": \"FTP Get\",\r\n                \"description\": \"Get one file on a sFTP or on a FTP serveur.\",\r\n                \"image\": \"/public/data-factory/tasks/spreadsheet.png\"\r\n            },\r\n            {\r\n                \"key\": \"ftp-post\",\r\n                \"displayName\": \"FTP Post\",\r\n                \"description\": \"Post one or many files on a sFTP or on a FTP serveur.\",\r\n                \"image\": \"/public/data-factory/tasks/spreadsheet.png\"\r\n            }\r\n        ]\r\n    }\r\n    \r\n];\r\n\r\n\r\nfunction Tasks(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <div className={classes.root}>\r\n                <Container maxWidth=\"lg\">\r\n                    {tasks.map((groupTask, index) => (\r\n                        <div>\r\n                            <h3>{groupTask.displayName}</h3>\r\n                            <Grid container spacing={3}>\r\n                                {/* {groupTask.tasks.map((task, idx) => (\r\n                                    <Grid item xs={4}>\r\n                                        <Card className={classes.card}>\r\n                                            <CardActionArea>\r\n                                                <CardMedia\r\n                                                    className={classes.media}\r\n                                                    image={task.image}\r\n                                                />\r\n                                                <CardContent>\r\n                                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                        {task.displayName}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                        {task.description}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                            </CardActionArea>\r\n                                            <CardActions>\r\n                                                <Button size=\"small\" color=\"primary\">\r\n                                                    Learn More\r\n                                                </Button>\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                ))} */}\r\n                            </Grid>\r\n                        </div>\r\n                    ))}                    \r\n                </Container>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nTasks.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Tasks);"]},"metadata":{},"sourceType":"module"}