{"version":3,"file":"static/webpack/static\\development\\pages\\data-factory\\tasks.js.c85bb8a522c02dc4f0e9.hot-update.js","sources":["webpack:///./pages/data-factory/tasks.js"],"sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Link from 'next/link';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    card: {\r\n        maxWidth: 300,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nconst tasks = [\r\n    {\r\n        \"displayName\": \"FTP\",\r\n        \"tasks\": [\r\n            {\r\n                \"key\": \"ftp-list\",\r\n                \"displayName\": \"FTP List\",\r\n                \"description\": \"List all files on a sFTP/FTP server.\",\r\n                \"image\": \"/data-factory/tasks/spreadsheet.png\",\r\n                \"link\": \"/data-factory/tasks/ftp-list\"\r\n            },\r\n            {\r\n                \"key\": \"ftp-get\",\r\n                \"displayName\": \"FTP Get\",\r\n                \"description\": \"Get one file on a sFTP/FTP server.\",\r\n                \"image\": \"/data-factory/tasks/spreadsheet.png\",\r\n                \"link\": \"/data-factory/tasks/ftp-get\"\r\n            },\r\n            {\r\n                \"key\": \"ftp-post\",\r\n                \"displayName\": \"FTP Post\",\r\n                \"description\": \"Post files on a sFTP/FTP server.\",\r\n                \"image\": \"/data-factory/tasks/spreadsheet.png\",\r\n                \"link\": \"/data-factory/tasks/ftp-post\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"displayName\": \"Generate files\",\r\n        \"tasks\": [\r\n            {\r\n                \"key\": \"generate-excel\",\r\n                \"displayName\": \"Generate Excel\",\r\n                \"description\": \"Generate one or many Excel files.\",\r\n                \"image\": \"/data-factory/tasks/spreadsheet.png\",\r\n                \"link\": \"/data-factory/tasks/generate-excel\"\r\n            },\r\n            {\r\n                \"key\": \"generate-pdf\",\r\n                \"displayName\": \"Generate PDF\",\r\n                \"description\": \"Get one or many PDF files\",\r\n                \"image\": \"/data-factory/tasks/pdf.png\",\r\n                \"link\": \"/data-factory/tasks/generate-pdf\"\r\n            },\r\n            {\r\n                \"key\": \"generate-csv\",\r\n                \"displayName\": \"Generate CSV\",\r\n                \"description\": \"Generate a CSV file.\",\r\n                \"image\": \"/data-factory/tasks/spreadsheet.png\",\r\n                \"link\": \"/data-factory/tasks/generate-csv\"\r\n            }\r\n        ]\r\n    }\r\n    \r\n];\r\n\r\n\r\nfunction Tasks(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <div className={classes.root}>\r\n                <Container maxWidth=\"md\">\r\n                    {tasks.map((groupTask, index) => (\r\n                        <div key={index}>\r\n                            <Typography variant=\"h1\" component=\"h2\">\r\n                                {groupTask.displayName}\r\n                            </Typography>\r\n                            <Grid container spacing={3}>\r\n                                {groupTask.tasks.map((task, idx) => (\r\n                                    <Grid item xs={4} key={task.key}>\r\n                                        <Link href={task.link}>\r\n                                            <Card className={classes.card}>\r\n                                                <CardActionArea>\r\n                                                    <CardMedia\r\n                                                        className={classes.media}\r\n                                                        image={task.image}\r\n                                                    />\r\n                                                    <CardContent>\r\n                                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                            {task.displayName}\r\n                                                        </Typography>\r\n                                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                            {task.description}\r\n                                                        </Typography>\r\n                                                    </CardContent>\r\n                                                </CardActionArea>\r\n                                                <CardActions>\r\n                                                    <Button size=\"small\" color=\"primary\">\r\n                                                        Learn More muc\r\n                                                    </Button>\r\n                                                </CardActions>\r\n                                            </Card>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                            <br></br>\r\n                            <br></br>\r\n                        </div>\r\n                    ))}                    \r\n                </Container>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nTasks.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Tasks);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAAA;AACA;AAWA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAjBA;AA2BA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAjnBA;AA4BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnCA;AA0CA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}